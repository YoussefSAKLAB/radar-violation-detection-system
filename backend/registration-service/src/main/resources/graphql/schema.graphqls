type Query {
    # Owners
    getVehicles : [Vehicle]
    getVehicleById(id : Float) : Vehicle

    # Vehicles
    getOwners : [Owner]
    getOwnerById(id: Float) : Owner
}

type Mutation {
    # Vehicles
    addVehicle(vehicle : VehicleDTO) : Vehicle
    updateVehicle(id:Float, vehicle:VehicleDTO) : Vehicle
    deleteVehicle(id:Float) : Boolean

    # Owners
    addOwner(owner:OwnerDTO) : Owner
    updateOwner(id:Float, owner:OwnerDTO) : Owner
    deleteOwner(id:Float) : Boolean
}
input VehicleDTO {
    id:Float
    registrationNumber : String
    brand : String
    fiscalPower : String
    model : String

}
type Vehicle {
    id : Float
    registrationNumber : String
    brand : String
    fiscalPower : String
    model : String
    owner : Owner
}
input OwnerDTO {
    id:Float
    name : String
    birthDate : String
    email : String
}

type Owner {
    id : Float
    name : String
    birthDate : String
    email : String
    vehicles : [Vehicle]
}